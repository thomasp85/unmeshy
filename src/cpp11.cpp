// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"

// render_bsp.cpp
cpp11::writable::data_frame illuminate_mesh_c(cpp11::doubles_matrix vert, cpp11::integers_matrix tri, cpp11::doubles luminance, cpp11::doubles xl, cpp11::doubles yl, cpp11::doubles zl, cpp11::doubles intensity);
extern "C" SEXP _unmeshy_illuminate_mesh_c(SEXP vert, SEXP tri, SEXP luminance, SEXP xl, SEXP yl, SEXP zl, SEXP intensity) {
  BEGIN_CPP11
    return cpp11::as_sexp(illuminate_mesh_c(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles_matrix>>(vert), cpp11::as_cpp<cpp11::decay_t<cpp11::integers_matrix>>(tri), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(luminance), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(xl), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(yl), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(zl), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(intensity)));
  END_CPP11
}
// render_bsp.cpp
cpp11::writable::data_frame occlude_mesh_c(cpp11::doubles_matrix vert, cpp11::integers_matrix tri, double xv, double yv, double zv);
extern "C" SEXP _unmeshy_occlude_mesh_c(SEXP vert, SEXP tri, SEXP xv, SEXP yv, SEXP zv) {
  BEGIN_CPP11
    return cpp11::as_sexp(occlude_mesh_c(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles_matrix>>(vert), cpp11::as_cpp<cpp11::decay_t<cpp11::integers_matrix>>(tri), cpp11::as_cpp<cpp11::decay_t<double>>(xv), cpp11::as_cpp<cpp11::decay_t<double>>(yv), cpp11::as_cpp<cpp11::decay_t<double>>(zv)));
  END_CPP11
}
// render_bsp.cpp
cpp11::writable::data_frame project_coords_c(cpp11::doubles x, cpp11::doubles y, cpp11::doubles z, double xv, double yv, double zv, double xp, double yp, double zp);
extern "C" SEXP _unmeshy_project_coords_c(SEXP x, SEXP y, SEXP z, SEXP xv, SEXP yv, SEXP zv, SEXP xp, SEXP yp, SEXP zp) {
  BEGIN_CPP11
    return cpp11::as_sexp(project_coords_c(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(x), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(y), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(z), cpp11::as_cpp<cpp11::decay_t<double>>(xv), cpp11::as_cpp<cpp11::decay_t<double>>(yv), cpp11::as_cpp<cpp11::decay_t<double>>(zv), cpp11::as_cpp<cpp11::decay_t<double>>(xp), cpp11::as_cpp<cpp11::decay_t<double>>(yp), cpp11::as_cpp<cpp11::decay_t<double>>(zp)));
  END_CPP11
}
// trimesh.cpp
cpp11::list join_triangles(cpp11::doubles x, cpp11::doubles y, cpp11::doubles z);
extern "C" SEXP _unmeshy_join_triangles(SEXP x, SEXP y, SEXP z) {
  BEGIN_CPP11
    return cpp11::as_sexp(join_triangles(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(x), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(y), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(z)));
  END_CPP11
}

extern "C" {
/* .Call calls */
extern SEXP _unmeshy_illuminate_mesh_c(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
extern SEXP _unmeshy_join_triangles(SEXP, SEXP, SEXP);
extern SEXP _unmeshy_occlude_mesh_c(SEXP, SEXP, SEXP, SEXP, SEXP);
extern SEXP _unmeshy_project_coords_c(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_unmeshy_illuminate_mesh_c", (DL_FUNC) &_unmeshy_illuminate_mesh_c, 7},
    {"_unmeshy_join_triangles",    (DL_FUNC) &_unmeshy_join_triangles,    3},
    {"_unmeshy_occlude_mesh_c",    (DL_FUNC) &_unmeshy_occlude_mesh_c,    5},
    {"_unmeshy_project_coords_c",  (DL_FUNC) &_unmeshy_project_coords_c,  9},
    {NULL, NULL, 0}
};
}

extern "C" void R_init_unmeshy(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}
